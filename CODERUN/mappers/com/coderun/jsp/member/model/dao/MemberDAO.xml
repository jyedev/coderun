<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberDAO">
	<resultMap type="com.coderun.jsp.member.model.dto.MemberDTO" id="memberResultMap">
		<id property="id" column="MEMBER_ID"/>
		<result property="pwd" column="MEMBER_PWD"/>
		<result property="name" column="MEMBER_NAME"/>
		<result property="email" column="EMAIL"/>
		<result property="birthday" column="BIRTHDAY"/>
		<result property="gender" column="GENDER"/>
		<result property="type" column="MEMBER_TYPE"/>
		<result property="freepassYn" column="FREEPASS_YN"/>
		<result property="status" column="MEMBER_STATUS"/>
	</resultMap>
	
	<select id="selectEncryptedPwd" resultType="java.lang.String">
		SELECT MEMBER_PWD
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = #{ id }
	</select>
	
	<select id="selectLoginMember" resultMap="memberResultMap">
		SELECT MEMBER_ID
			 , MEMBER_NAME
			 , EMAIL
			 , BIRTHDAY
			 , GENDER
			 , MEMBER_TYPE
			 , FREEPASS_YN
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = #{ id }
	</select>
	
	<select id="searchId" resultType="java.lang.String">
		SELECT MEMBER_ID
		  FROM TB_MEMBER
		 WHERE MEMBER_NAME = #{ name }
		   AND EMAIL = #{ email }
	</select>
	
	<select id="memberIdCheck" resultType="_int">
		SELECT COUNT(*)
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = #{ id }
	</select>
	
	<insert id="insertMember" parameterType="com.coderun.jsp.member.model.dto.MemberDTO">
		INSERT INTO TB_MEMBER
		(
		  MEMBER_ID
		, MEMBER_PWD
		, MEMBER_NAME
		, EMAIL
		, BIRTHDAY
		, GENDER
		)
		VALUES
		(
		  #{ id }
		, #{ pwd }
		, #{ name }
		, #{ email }
		, #{ birthday }
		, #{ gender }
		)
	</insert>
	
	<update id="updateMember">
		UPDATE
			   TB_MEMBER
		   SET MEMBER_NAME = #{ name }
		     , EMAIL = #{ email }
		     , BIRTHDAY = #{ birthday }
		     , GENDER = #{ gender }
		 WHERE MEMBER_ID = #{ id }
	</update>
	
	<select id="selectChangedMemberInfo" resultMap="memberResultMap">
		SELECT
			   MEMBER_ID
			 , MEMBER_NAME
			 , EMAIL
			 , BIRTHDAY
			 , GENDER
			 , MEMBER_TYPE
			 , FREEPASS_YN
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = #{ id }
	</select>
	
	<!-- <select id="selectAllMemberList" resultMap="memberResultMap">
		SELECT
			   MEMBER_TYPE
			 , MEMBER_ID
		  FROM TB_MEMBER
		 WHERE MEMBER_TYPE NOT IN ('관리자')
	</select> -->
	
	<select id="selectTotalCount" resultType="_int" parameterType="hashmap">
		SELECT 
			   COUNT(*)
		  FROM TB_MEMBER
		 <where>
		 	<if test="searchCondition != null">
		 	MEMBER_ID LIKE '%' || #{ searchValue } || '%' 
		 	</if>
		 </where>
 		
		
	</select>
	
	<select id="selectMemberList" resultMap="memberResultMap">
		SELECT
			   A.RNUM
			 , A.MEMBER_TYPE
			 , A.MEMBER_ID
		  FROM (SELECT ROWNUM RNUM
		  			 , B.MEMBER_TYPE
		  			 , B.MEMBER_ID
		  		  FROM (SELECT C.MEMBER_TYPE
		  		  			 , C.MEMBER_ID
		  		  		  FROM TB_MEMBER C
		WHERE MEMBER_TYPE NOT IN ('관리자')
		  AND MEMBER_STATUS = 'Y'
	 	<if test="searchCondition != null">
	 	AND MEMBER_ID LIKE '%' || #{ searchValue } || '%' 
	 	</if>
	 	) B
		<![CDATA[
        WHERE ROWNUM <= #{ endRow }
        ]]> 
        ) A
        WHERE A.RNUM >= #{ startRow }
          <!-- AND A.MEMBER_TYPE NOT IN ('관리자')
		  AND A.MEMBER_STATUS = 'Y' -->
 	</select>
	
</mapper>